#!/bin/bash
#
#(make sure the right shell will be used)
#$ -S /bin/bash
#
#execute the job from the current directory and not relative to your home directory
#$ -cwd

# sld6 for bird on NAF2
#$ -l arch=amd64
#$ -l os=sld6

#$ -l h_rt=23:59:00
#$ -l h_vmem=4G

#set the email address
##$ -M <user>@desy.de
#
#send email when job aborts or when job ends
##$ -m ae

echo "############################################################################"
echo "                             System information"
echo "                             =================="

echo "Host:"
hostname -f

echo "CPU(s):"
cat /proc/cpuinfo | grep "model name" | cut -b 14-

echo "RAM:"
cat /proc/meminfo | grep "MemTotal" | cut -b 10-

echo "Swap:"
cat /proc/meminfo | grep "SwapTotal" | cut -b 11-

echo "############################################################################"
echo "Group:      ${GROUP}"

echo "Hosttype:   ${HOSTTYPE}"

echo "JobID:      ${JOB_ID}"

echo "JobName:    ${JOB_NAME}"

echo "Job_Script: ${JOB_SCRIPT}"

echo "User:       ${LOGNAME}"

echo "Queue:      ${QUEUE}"

echo "Shell:      ${SHELL}"

echo "TMP:        ${TMP}"

echo "TMPDIR:     ${TMPDIR}"

echo "User:       ${USER}"

echo "Working_DIR:${PWD}"

echo "############################################################################"
echo
echo "############################################################################"
echo

ilcsoft=$1
ildconfig=$2
detector=$3
energy=$4
outputDirectory=$5
run=$6
skipNEvents=$7

echo "############################################################################"
echo "                              Job information"
echo "                             =================="

echo "ILCSoft:           ${ilcsoft}"

echo "ILDConfig:         ${ildconfig}"

echo "Detector:          ${detector}"

echo "CMS energy:        ${energy}"

echo "Output directory:  ${outputDirectory}"

echo "Run:               ${run}"

echo "Skip/split:        ${skipNEvents}"

# Initialize ILCSoft
source /afs/desy.de/project/ilcsoft/sw/x86_64_gcc49_sl6/${ilcsoft}/init_ilcsoft.sh

stdhepInputFile="/pnfs/desy.de/ilc/user/s/sgreen/StdHepFiles/Z_uds/${energy}GeV/Zuds${energy}_0${run}.stdhep"
compactFile="$lcgeo_DIR/ILD/compact/${detector}/${detector}.xml"
outputFile="${outputDirectory}/ddsim-s${ilcsoft}-G${detector}-Zuds${energy}_0${run}_${skipNEvents}00.slcio"
steerDownloadUrl="https://github.com/iLCSoft/ILDConfig/blob/${ildconfig}/StandardConfig/production/DDSim/ddsim_steer.py"

echo "Stdhep file:       ${stdhepInputFile}"

echo "Compact file:      ${compactFile}"

echo "Output file:       ${outputFile}"

echo "Steering file url: ${steerDownloadUrl}"

# Create output directory if doesn't exists
mkdir -p ${outputDirectory}

if [ $? != 0 ]
then
  echo "Couldn't create output directory '${outputDirectory}' !"
  exit 1
fi

mkdir ILDPerformance_JER_ddsim_${JOB_ID}
cd ILDPerformance_JER_ddsim_${JOB_ID}

echo "Job directory:     ${PWD}"

# Get the ddsim steering file from github
wget ${steerDownloadUrl}

if [ $? != 0 ]
then
  echo "Couldn't get the ddsim steering file from github url: 'https://github.com/iLCSoft/ILDConfig/blob/${ildconfig}/StandardConfig/production/DDSim/ddsim_steer.py' !"
  exit 1
fi

echo "############################################################################"
echo "                                Running ddsim"
echo "                             =================="

# Run ddsim
ddsim --compactFile ${compactFile} --inputFiles ${stdhepInputFile} --outputFile ${outputFile} --steeringFile ./ddsim_steer.py --skipNEvents ${skipNEvents}00 --numberOfEvents 100
ddsimStatus=$?

echo "############################################################################"
echo "                   Job finished with status ${ddsimStatus}"
echo "                             =================="

ls -lthr